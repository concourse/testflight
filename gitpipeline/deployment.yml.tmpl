---
name: concourse

director_uuid: <%= `bosh status --uuid` %>

# git pipeline
pipeline: &pipeline
  resources:
    - name: some-git-resource
      type: git
      source:
        uri: {{.GitServers.Origin}}
        branch: master

    - name: some-git-resource-success
      type: git
      source:
        uri: {{.GitServers.Success}}
        branch: success

    - name: some-git-resource-failure
      type: git
      source:
        uri: {{.GitServers.Failure}}
        branch: failure

    - name: some-git-resource-no-update
      type: git
      source:
        uri: {{.GitServers.NoUpdate}}
        branch: no-update

  jobs:
    - name: some-job
      config:
        image: {{.TestflightHelperImage}}
        run:
          path: bash
          args: ["-c", "tail -1 some-git-resource/guids | {{.GuidServerCurlCommand}}"]
      inputs:
        - resource: some-git-resource
      outputs:
        - resource: some-git-resource-success
          params:
            repository: some-git-resource

    - name: some-failing-job
      config:
        image: {{.TestflightHelperImage}}
        run:
          path: bash
          args: ["-c", "exit 1"]
      inputs:
        - resource: some-git-resource
      outputs:
        - resource: some-git-resource-no-update
          params:
            repository: some-git-resource
        - resource: some-git-resource-failure
          "on": [failure]
          params:
            repository: some-git-resource

releases:
  - name: concourse
    version: latest
  - name: garden-linux
    version: latest

jobs:
  - name: concourse
    instances: 1
    networks:
      - name: concourse
        static_ips: [&web-ip 10.244.8.2]
    persistent_disk: 10240
    resource_pool: concourse
    templates:
      - {release: concourse, name: atc}
      - {release: concourse, name: turbine}
      - {release: concourse, name: postgresql}
      - {release: garden-linux, name: garden}
      - {release: concourse, name: consul-agent}
    properties:
      atc:
        pipeline: *pipeline

        # turn off and provide auth for a real vagrant instance
        development_mode: true

        default_check_interval: 10s

        postgresql:
          role: &atc-role
            name: atc
            password: dummy-password

      postgresql:
        databases: [{name: atc}]
        roles:
          - *atc-role

      garden:
        listen_network: tcp
        listen_address: 0.0.0.0:7777

        # cannot enforce quotas in bosh-lite
        disk_quota_enabled: false

      turbine:
        garden:
          network: tcp
          address: 127.0.0.1:7777

      consul:
        agent:
          mode: server
          services:
            - name: atc
            - name: turbine
            - name: postgresql
            - name: garden

networks:
  - name: concourse
    subnets:
      # network with static ip used for web
      - range: 10.244.8.0/30
        reserved: [10.244.8.1]
        static: [10.244.8.2]
        cloud_properties: {}

      # networks for dynamic ips (compilation vms)
      - range: 10.244.8.4/30
        reserved: [10.244.8.5]
        cloud_properties: {}
      - range: 10.244.8.8/30
        reserved: [10.244.8.9]
        cloud_properties: {}
      - range: 10.244.8.12/30
        reserved: [10.244.8.13]
        cloud_properties: {}
      - range: 10.244.8.16/30
        reserved: [10.244.8.17]
        cloud_properties: {}
      - range: 10.244.8.20/30
        reserved: [10.244.8.21]
        cloud_properties: {}

resource_pools:
  - name: concourse
    network: concourse
    cloud_properties: {}
    stemcell:
      name: bosh-warden-boshlite-ubuntu-trusty-go_agent
      version: latest

compilation:
  workers: 3
  network: concourse
  cloud_properties: {}

update:
  canaries: 1
  max_in_flight: 3
  serial: false
  canary_watch_time: 1000-60000
  update_watch_time: 1000-60000
