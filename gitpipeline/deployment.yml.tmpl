---
name: concourse-testflight

director_uuid: {{.DirectorUUID}}

# git pipeline
pipeline: &pipeline
  resources:
    - name: some-git-resource
      type: git
      source:
        uri: {{.GitServers.Origin}}
        branch: master

    - name: some-git-resource-success
      type: git
      source:
        uri: {{.GitServers.Success}}
        branch: success

    - name: some-git-resource-failure
      type: git
      source:
        uri: {{.GitServers.Failure}}
        branch: failure

    - name: some-git-resource-no-update
      type: git
      source:
        uri: {{.GitServers.NoUpdate}}
        branch: no-update

  jobs:
    - name: some-passing-job
      plan:
        - get: some-git-resource
        - task: curl-server
          config:
            platform: linux
            image: {{.TestflightHelperImage}}
            inputs:
              - name: some-git-resource
                path: .
            run:
              path: bash
              args: ["-c", "tail -1 guids | {{.GuidServerCurlCommand}}"]
        - put: some-git-resource-success
          params:
            repository: curl-server

    - name: some-failing-job
      plan:
        - get: some-git-resource
        - task: curl-server
          config:
            platform: linux
            image: {{.TestflightHelperImage}}
            inputs:
              - name: some-git-resource
                path: .
            run:
              path: bash
              args: ["-c", "exit 1"]
        - aggregate:
            - put: some-git-resource-no-update
              params:
                repository: curl-server
            - put: some-git-resource-failure
              conditions: [failure]
              params:
                repository: curl-server

    - name: fancy-build-matrix
      plan:
        - get: some-git-resource
        - aggregate:
            - task: passing-unit-1
              config:
                platform: linux
                image: {{.TestflightHelperImage}}
                run:
                  path: touch
                  args: [file]
            - task: passing-unit-2
              config:
                platform: linux
                image: {{.TestflightHelperImage}}
                run:
                  path: touch
                  args: [file]
        - task: curl-server
          config:
            platform: linux
            image: {{.TestflightHelperImage}}
            inputs:
              - name: passing-unit-1
              - name: passing-unit-2
              - name: some-git-resource
            run:
              path: bash
              args: ["-c", '{ echo $(ls passing-unit-*/file) $(tail -1 some-git-resource/guids); } | {{.GuidServerCurlCommand}}']
        - aggregate:
            - task: second-passing-unit-1
              config:
                platform: linux
                image: {{.TestflightHelperImage}}
                run:
                  path: sh
                  args: [-c, exit 0]
            - task: second-failing-unit-2
              config:
                platform: linux
                image: {{.TestflightHelperImage}}
                run:
                  path: sh
                  args: [-c, exit 1]
        - task: curl-server-failure
          conditions: [failure]
          config:
            platform: linux
            image: {{.TestflightHelperImage}}
            inputs:
              - name: some-git-resource
            run:
              path: bash
              args: ["-c", '{ echo failed $(tail -1 some-git-resource/guids); } | {{.GuidServerCurlCommand}}']


releases:
  - name: concourse
    version: latest
  - name: garden-linux
    version: {{.GardenLinuxVersion}}

jobs:
  - name: concourse
    instances: 1
    networks:
      - name: concourse
        static_ips: [&web-ip 10.244.15.2]
    persistent_disk: 10240
    resource_pool: concourse
    templates:
      - {release: concourse, name: atc}
      - {release: concourse, name: tsa}
      - {release: concourse, name: groundcrew}
      - {release: concourse, name: postgresql}
      - {release: garden-linux, name: garden}
      - {release: concourse, name: consul-agent}
    properties:
      atc:
        pipeline: *pipeline

        # turn off and provide auth for a real vagrant instance
        development_mode: true

        default_check_interval: 1s

        postgresql:
          role: &atc-role
            name: atc
            password: dummy-password

      postgresql:
        databases: [{name: atc}]
        roles:
          - *atc-role

      garden:
        listen_network: tcp
        listen_address: 0.0.0.0:7777

        # cannot enforce quotas in bosh-lite
        disk_quota_enabled: false

        allow_host_access: true

      consul:
        agent:
          mode: server

networks:
  - name: concourse
    subnets:
      # network with static ip used for web
      - range: 10.244.15.0/30
        reserved: [10.244.15.1]
        static: [10.244.15.2]
        cloud_properties: {}

      # networks for dynamic ips (compilation vms)
      - range: 10.244.15.4/30
        reserved: [10.244.15.5]
        cloud_properties: {}
      - range: 10.244.15.8/30
        reserved: [10.244.15.9]
        cloud_properties: {}
      - range: 10.244.15.12/30
        reserved: [10.244.15.13]
        cloud_properties: {}
      - range: 10.244.15.16/30
        reserved: [10.244.15.17]
        cloud_properties: {}
      - range: 10.244.15.20/30
        reserved: [10.244.15.21]
        cloud_properties: {}

resource_pools:
  - name: concourse
    network: concourse
    cloud_properties: {}
    stemcell:
      name: bosh-warden-boshlite-ubuntu-trusty-go_agent
      version: latest

compilation:
  workers: 3
  network: concourse
  cloud_properties: {}

update:
  canaries: 1
  max_in_flight: 3
  serial: false
  canary_watch_time: 1000-120000
  update_watch_time: 1000-120000
